# -*- coding: utf-8 -*-
"""titanic 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZXrKRnKl15zJO1iI2exU_lkWjfFzWCEK
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
a=pd.read_csv("/content/drive/MyDrive/Titanic-Dataset.csv")
print(a)

a.info()

a = a.drop(['PassengerId', 'Name', 'Cabin'], axis=1)  # Correct the case of 'PassengerId'
a.head(10)

a ['Age'] = a['Age'] .fillna(a['Age']. mean())
a.dropna(inplace=True)

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
a['Sex'] = label_encoder.fit_transform(a['Sex'])
a['Embarked'] = label_encoder.fit_transform(a['Embarked'])

a = a.drop(['Ticket'] , axis = 1)

a['Fare'] = (a['Fare'] - a['Fare'].min()) / (a['Fare'].max() - a['Fare'].min())

a.head(10)

a['Survived'].value_counts()

X = a.drop('Survived' ,axis = 1)
y = a['Survived']

from sklearn.model_selection import train_test_split
X_train ,X_test ,y_train ,y_test = train_test_split(X ,y ,test_size = 0.2 ,random_state = 0)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')
print(' ')
conf_matrix = confusion_matrix(y_test, y_pred)
print('Confusion Matrix:\n', conf_matrix)
print(' ')
class_report = classification_report(y_test, y_pred)
print('Classification Report:\n', class_report)

from sklearn.linear_model import LogisticRegression

model = LogisticRegression(max_iter=1000, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')
print(' ')
conf_matrix = confusion_matrix(y_test, y_pred)
print('Confusion Matrix:\n', conf_matrix)
print(' ')
class_report = classification_report(y_test, y_pred)
print('Classification Report:\n', class_report)